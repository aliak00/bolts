// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'bolts.experimental.refraction', kind: "module", path: './bolts/experimental/refraction.html', attributes: []},
{name: 'bolts.experimental.refraction.Function', kind: "structdeclaration", path: './bolts/experimental/refraction/Function.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.argumentMixture', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.argumentMixture.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.argumentMixtureArray', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.argumentMixtureArray.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.attributeMixture', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.attributeMixture.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.attributeMixtureArray', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.attributeMixtureArray.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.attributes', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.attributes.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.body_', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.body_.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.localName', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.localName.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.mixture', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.mixture.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.name', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.name.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.overloadIndex', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.overloadIndex.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.parameters', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.parameters.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.returnType', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.returnType.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.static_', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.static_.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.udas', kind: "variabledeclaration", path: './bolts/experimental/refraction/Function.udas.html', attributes: []},
{name: 'bolts.experimental.refraction.Function.withAttributes', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withAttributes.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.withBody', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withBody.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.withName', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withName.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.withParameters', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withParameters.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.withParametersAt', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withParametersAt.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.withReturnType', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withReturnType.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.withStatic', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withStatic.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Function.withUdas', kind: "functiondeclaration", path: './bolts/experimental/refraction/Function.withUdas.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.functionsOf', kind: "functiondeclaration", path: './bolts/experimental/refraction/functionsOf.html', attributes: ["auto"]},
{name: 'bolts.experimental.refraction.Parameter', kind: "structdeclaration", path: './bolts/experimental/refraction/Parameter.html', attributes: []},
{name: 'bolts.experimental.refraction.Parameter.name', kind: "variabledeclaration", path: './bolts/experimental/refraction/Parameter.name.html', attributes: []},
{name: 'bolts.experimental.refraction.Parameter.storageClasses', kind: "variabledeclaration", path: './bolts/experimental/refraction/Parameter.storageClasses.html', attributes: []},
{name: 'bolts.experimental.refraction.Parameter.type', kind: "variabledeclaration", path: './bolts/experimental/refraction/Parameter.type.html', attributes: []},
{name: 'bolts.experimental.refraction.Parameter.udas', kind: "variabledeclaration", path: './bolts/experimental/refraction/Parameter.udas.html', attributes: []},
{name: 'bolts.experimental.refraction.Parameter.withName', kind: "functiondeclaration", path: './bolts/experimental/refraction/Parameter.withName.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Parameter.withStorageClasses', kind: "functiondeclaration", path: './bolts/experimental/refraction/Parameter.withStorageClasses.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Parameter.withType', kind: "functiondeclaration", path: './bolts/experimental/refraction/Parameter.withType.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.Parameter.withUdas', kind: "functiondeclaration", path: './bolts/experimental/refraction/Parameter.withUdas.html', attributes: ["immutable"]},
{name: 'bolts.experimental.refraction.ParameterAttribute', kind: "aliasdeclaration", path: './bolts/experimental/refraction/ParameterAttribute.html', attributes: []},
{name: 'bolts.experimental.refraction.refract', kind: "functiondeclaration", path: './bolts/experimental/refraction/refract.html', attributes: []},
{name: 'bolts.experimental.signatures', kind: "module", path: './bolts/experimental/signatures.html', attributes: []},
{name: 'bolts.experimental.signatures.AssertModelOf', kind: "enummemberdeclaration", path: './bolts/experimental/signatures/AssertModelOf.html', attributes: []},
{name: 'bolts.experimental.signatures.ignoreAttributes', kind: "structdeclaration", path: './bolts/experimental/signatures/ignoreAttributes.html', attributes: []},
{name: 'bolts.experimental.signatures.ignoreQualifiers', kind: "structdeclaration", path: './bolts/experimental/signatures/ignoreQualifiers.html', attributes: []},
{name: 'bolts.experimental.signatures.isModelOf', kind: "enummemberdeclaration", path: './bolts/experimental/signatures/isModelOf.html', attributes: []},
{name: 'bolts.experimental.signatures.Models', kind: "templatedeclaration", path: './bolts/experimental/signatures/Models.html', attributes: []},
{name: 'bolts.traits.functions', kind: "module", path: './bolts/traits/functions.html', attributes: []},
{name: 'bolts.traits.functions.isBinaryOver', kind: "enummemberdeclaration", path: './bolts/traits/functions/isBinaryOver.html', attributes: []},
{name: 'bolts.traits.functions.isFunctionOver', kind: "enummemberdeclaration", path: './bolts/traits/functions/isFunctionOver.html', attributes: []},
{name: 'bolts.traits.functions.isUnaryOver', kind: "enummemberdeclaration", path: './bolts/traits/functions/isUnaryOver.html', attributes: []},
{name: 'bolts.traits.has', kind: "module", path: './bolts/traits/has.html', attributes: []},
{name: 'bolts.traits.has.hasFunctionMember', kind: "enummemberdeclaration", path: './bolts/traits/has/hasFunctionMember.html', attributes: []},
{name: 'bolts.traits.has.hasProperty', kind: "enummemberdeclaration", path: './bolts/traits/has/hasProperty.html', attributes: []},
{name: 'bolts.traits.symbols', kind: "module", path: './bolts/traits/symbols.html', attributes: []},
{name: 'bolts.traits.symbols.isLiteral', kind: "enummemberdeclaration", path: './bolts/traits/symbols/isLiteral.html', attributes: []},
{name: 'bolts.traits.symbols.isLiteralOf', kind: "enummemberdeclaration", path: './bolts/traits/symbols/isLiteralOf.html', attributes: []},
{name: 'bolts.traits.symbols.isManifestAssignable', kind: "enummemberdeclaration", path: './bolts/traits/symbols/isManifestAssignable.html', attributes: []},
{name: 'bolts.traits.symbols.isOf', kind: "enummemberdeclaration", path: './bolts/traits/symbols/isOf.html', attributes: []},
{name: 'bolts.traits.symbols.isProperty', kind: "enummemberdeclaration", path: './bolts/traits/symbols/isProperty.html', attributes: []},
{name: 'bolts.traits.symbols.isRefDecl', kind: "enummemberdeclaration", path: './bolts/traits/symbols/isRefDecl.html', attributes: []},
{name: 'bolts.traits.symbols.isSame', kind: "enummemberdeclaration", path: './bolts/traits/symbols/isSame.html', attributes: []},
{name: 'bolts.traits.symbols.PropertySemantics', kind: "enumdeclaration", path: './bolts/traits/symbols/PropertySemantics.html', attributes: []},
{name: 'bolts.traits.symbols.PropertySemantics.r', kind: "enummemberdeclaration", path: './bolts/traits/symbols/PropertySemantics.html#r', attributes: []},
{name: 'bolts.traits.symbols.PropertySemantics.rw', kind: "enummemberdeclaration", path: './bolts/traits/symbols/PropertySemantics.html#rw', attributes: []},
{name: 'bolts.traits.symbols.PropertySemantics.w', kind: "enummemberdeclaration", path: './bolts/traits/symbols/PropertySemantics.html#w', attributes: []},
{name: 'bolts.traits.symbols.propertySemantics', kind: "enummemberdeclaration", path: './bolts/traits/symbols/propertySemantics.html', attributes: []},
{name: 'bolts.traits.symbols.ProtectionLevel', kind: "enumdeclaration", path: './bolts/traits/symbols/ProtectionLevel.html', attributes: []},
{name: 'bolts.traits.symbols.protectionLevel', kind: "enummemberdeclaration", path: './bolts/traits/symbols/protectionLevel.html', attributes: []},
{name: 'bolts.traits.symbols.TypesOf', kind: "aliasdeclaration", path: './bolts/traits/symbols/TypesOf.html', attributes: []},
{name: 'bolts.traits.types', kind: "module", path: './bolts/traits/types.html', attributes: []},
{name: 'bolts.traits.types.areCombinable', kind: "enummemberdeclaration", path: './bolts/traits/types/areCombinable.html', attributes: []},
{name: 'bolts.traits.types.areEquatable', kind: "enummemberdeclaration", path: './bolts/traits/types/areEquatable.html', attributes: []},
{name: 'bolts.traits.types.isCopyConstructable', kind: "enummemberdeclaration", path: './bolts/traits/types/isCopyConstructable.html', attributes: []},
{name: 'bolts.traits.types.isNonTriviallyCopyConstructable', kind: "enummemberdeclaration", path: './bolts/traits/types/isNonTriviallyCopyConstructable.html', attributes: []},
{name: 'bolts.traits.types.isNullSettable', kind: "enummemberdeclaration", path: './bolts/traits/types/isNullSettable.html', attributes: []},
{name: 'bolts.traits.types.isNullTestable', kind: "enummemberdeclaration", path: './bolts/traits/types/isNullTestable.html', attributes: []},
{name: 'bolts.traits.types.isNullType', kind: "enummemberdeclaration", path: './bolts/traits/types/isNullType.html', attributes: []},
{name: 'bolts.traits.types.isRefType', kind: "enummemberdeclaration", path: './bolts/traits/types/isRefType.html', attributes: []},
{name: 'bolts.traits.types.isTriviallyCopyConstructable', kind: "enummemberdeclaration", path: './bolts/traits/types/isTriviallyCopyConstructable.html', attributes: []},
{name: 'bolts.traits.types.isValueType', kind: "enummemberdeclaration", path: './bolts/traits/types/isValueType.html', attributes: []},
{name: 'bolts.traits.types.StringOf', kind: "variabledeclaration", path: './bolts/traits/types/StringOf.html', attributes: []},
{name: 'bolts.experimental', kind: "module", path: './bolts/experimental.html', attributes: []},
{name: 'bolts.from', kind: "module", path: './bolts/from.html', attributes: []},
{name: 'bolts.from.from', kind: "enummemberdeclaration", path: './bolts/from/from.html', attributes: []},
{name: 'bolts.iz', kind: "module", path: './bolts/iz.html', attributes: []},
{name: 'bolts.iz.iz', kind: "templatedeclaration", path: './bolts/iz/iz.html', attributes: []},
{name: 'bolts.iz.iz.binaryOver', kind: "enummemberdeclaration", path: './bolts/iz/iz.binaryOver.html', attributes: []},
{name: 'bolts.iz.iz.copyConstructable', kind: "enummemberdeclaration", path: './bolts/iz/iz.copyConstructable.html', attributes: []},
{name: 'bolts.iz.iz.equatableTo', kind: "enummemberdeclaration", path: './bolts/iz/iz.equatableTo.html', attributes: []},
{name: 'bolts.iz.iz.functionOver', kind: "enummemberdeclaration", path: './bolts/iz/iz.functionOver.html', attributes: []},
{name: 'bolts.iz.iz.literal', kind: "enummemberdeclaration", path: './bolts/iz/iz.literal.html', attributes: []},
{name: 'bolts.iz.iz.literalOf', kind: "enummemberdeclaration", path: './bolts/iz/iz.literalOf.html', attributes: []},
{name: 'bolts.iz.iz.nonTriviallyCopyConstructable', kind: "enummemberdeclaration", path: './bolts/iz/iz.nonTriviallyCopyConstructable.html', attributes: []},
{name: 'bolts.iz.iz.nullSettable', kind: "enummemberdeclaration", path: './bolts/iz/iz.nullSettable.html', attributes: []},
{name: 'bolts.iz.iz.nullTestable', kind: "enummemberdeclaration", path: './bolts/iz/iz.nullTestable.html', attributes: []},
{name: 'bolts.iz.iz.nullType', kind: "enummemberdeclaration", path: './bolts/iz/iz.nullType.html', attributes: []},
{name: 'bolts.iz.iz.of', kind: "enummemberdeclaration", path: './bolts/iz/iz.of.html', attributes: []},
{name: 'bolts.iz.iz.refDecl', kind: "enummemberdeclaration", path: './bolts/iz/iz.refDecl.html', attributes: []},
{name: 'bolts.iz.iz.refType', kind: "enummemberdeclaration", path: './bolts/iz/iz.refType.html', attributes: []},
{name: 'bolts.iz.iz.sameAs', kind: "enummemberdeclaration", path: './bolts/iz/iz.sameAs.html', attributes: []},
{name: 'bolts.iz.iz.triviallyCopyConstructable', kind: "enummemberdeclaration", path: './bolts/iz/iz.triviallyCopyConstructable.html', attributes: []},
{name: 'bolts.iz.iz.unaryOver', kind: "enummemberdeclaration", path: './bolts/iz/iz.unaryOver.html', attributes: []},
{name: 'bolts.iz.iz.valueType', kind: "enummemberdeclaration", path: './bolts/iz/iz.valueType.html', attributes: []},
{name: 'bolts.members', kind: "module", path: './bolts/members.html', attributes: []},
{name: 'bolts.members.member', kind: "templatedeclaration", path: './bolts/members/member.html', attributes: []},
{name: 'bolts.members.member.exists', kind: "enummemberdeclaration", path: './bolts/members/member.exists.html', attributes: []},
{name: 'bolts.members.member.isProperty', kind: "enummemberdeclaration", path: './bolts/members/member.isProperty.html', attributes: []},
{name: 'bolts.members.member.propertySemantics', kind: "enummemberdeclaration", path: './bolts/members/member.propertySemantics.html', attributes: []},
{name: 'bolts.members.member.protection', kind: "enummemberdeclaration", path: './bolts/members/member.protection.html', attributes: []},
{name: 'bolts.members.member.self', kind: "aliasdeclaration", path: './bolts/members/member.self.html', attributes: []},
{name: 'bolts.members.memberFunctionsOf', kind: "templatedeclaration", path: './bolts/members/memberFunctionsOf.html', attributes: []},
{name: 'bolts.members.memberFunctionsOf.asAliases', kind: "aliasdeclaration", path: './bolts/members/memberFunctionsOf.asAliases.html', attributes: []},
{name: 'bolts.members.memberFunctionsOf.asStrings', kind: "aliasdeclaration", path: './bolts/members/memberFunctionsOf.asStrings.html', attributes: []},
{name: 'bolts.members.staticMembersOf', kind: "templatedeclaration", path: './bolts/members/staticMembersOf.html', attributes: []},
{name: 'bolts.members.staticMembersOf.asAliases', kind: "aliasdeclaration", path: './bolts/members/staticMembersOf.asAliases.html', attributes: []},
{name: 'bolts.members.staticMembersOf.asStrings', kind: "aliasdeclaration", path: './bolts/members/staticMembersOf.asStrings.html', attributes: []},
{name: 'bolts.meta', kind: "module", path: './bolts/meta.html', attributes: []},
{name: 'bolts.meta.AliasPack', kind: "templatedeclaration", path: './bolts/meta/AliasPack.html', attributes: []},
{name: 'bolts.meta.FilterMembersOf', kind: "aliasdeclaration", path: './bolts/meta/FilterMembersOf.html', attributes: []},
{name: 'bolts.meta.Flatten', kind: "aliasdeclaration", path: './bolts/meta/Flatten.html', attributes: []},
{name: 'bolts.meta.Pluck', kind: "aliasdeclaration", path: './bolts/meta/Pluck.html', attributes: []},
{name: 'bolts.meta.RemoveAttributes', kind: "aliasdeclaration", path: './bolts/meta/RemoveAttributes.html', attributes: []},
{name: 'bolts.meta.Zip', kind: "aliasdeclaration", path: './bolts/meta/Zip.html', attributes: []},
{name: 'bolts.range', kind: "module", path: './bolts/range.html', attributes: []},
{name: 'bolts.range.CommonTypeOfRanges', kind: "aliasdeclaration", path: './bolts/range/CommonTypeOfRanges.html', attributes: []},
{name: 'bolts.range.isSortedRange', kind: "enummemberdeclaration", path: './bolts/range/isSortedRange.html', attributes: []},
{name: 'bolts.range.sortingPredicate', kind: "aliasdeclaration", path: './bolts/range/sortingPredicate.html', attributes: []},
{name: 'bolts.traits', kind: "module", path: './bolts/traits.html', attributes: []},
{name: 'bolts', kind: "module", path: './bolts.html', attributes: []},
];
